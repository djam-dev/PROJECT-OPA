version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafkaui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"

  postgre:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: VALDML
      POSTGRES_PASSWORD: PROJETOPA
      POSTGRES_DB: binance_data
    ports:
      - "5433:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: VALENTIN.DORMEUIL.PRO@GMAIL.COM
      PGADMIN_DEFAULT_PASSWORD: PROJETOPA
    ports:
      - "5050:80"

  #producer:
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
  #  depends_on:
  #    - kafka
  #    - postgre
  #  environment:
  #    KAFKA_HOST: kafka:9092

  producer_ccxt:
    build:
      context: ./producers/ccxt
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgre
    environment:
      KAFKA_HOST: kafka:9092

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./projet_opa:/app
    depends_on:
      - kafka
      - postgre
    command: ["sh", "-c", "jupyter notebook --ip=0.0.0.0 --port=8888 --allow-root --no-browser"]

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - postgre
