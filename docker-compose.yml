version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      #KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafkaui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"

  postgres:
    image: postgres:16-alpine
    build:
      context: ./services/postgres
    restart: always
    environment:
      POSTGRES_USER: VALDML
      POSTGRES_PASSWORD: PROJETOPA
      POSTGRES_DB: binance_data
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  ml_train:
    build:
      context: ./ml/ohlcv_5m
      dockerfile: Dockerfile.train
    volumes:
      - model_data:/app
    depends_on:
      - postgres
      - consumer_ccxt
    environment:
      - PYTHONUNBUFFERED=1
  
  ml_predict:
    build:
      context: ./ml/ohlcv_5m
      dockerfile: Dockerfile.predict
    depends_on:
      - postgres
    volumes:
      - model_data:/model
    environment:
      - PYTHONUNBUFFERED=1

  #pgadmin:
  #  container_name: pgadmin4_container
  #  image: dpage/pgadmin4
  #  build:
  #    context: ./services/pgadmin
  #  restart: always
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: VALENTIN.DORMEUIL.PRO@GMAIL.COM
  #    PGADMIN_DEFAULT_PASSWORD: PROJETOPA
  #  ports:
  #    - "5050:80"

  producer_ccxt:
    build:
      context: ./producers/ohlcv_5m
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092

  consumer_ccxt:
    build:
      context: ./consumers/ohlcv_5m
    depends_on:
      - kafka
      - postgres
    environment:
      POSTGRES_DB: binance_data
      POSTGRES_USER: VALDML
      POSTGRES_PASSWORD: PROJETOPA
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: Binance_ohlcv_5m

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile.fastapi
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - PYTHONUNBUFFERED=1

  streamlit:
    build:
      context: ./streamlit
    ports:
      - "8501:8501"
    depends_on:
      - fastapi

volumes:
  postgres_data:
  model_data:
